{
  "openapi": "3.0.0",
  "info": {
    "version": 1.0,
    "title": "Swagger Heladeria",
    "description": "Documentación de las API´s del proyecto de Heladería y Cafetería La Aldeana",
    "contact": {
      "name": "Joaquín Bassano",
      "email": "joaquinbas98@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/api",
      "description": "Local Server"
    },
    {
      "url": "https://la-aldeana-dev.herokuapp.com/api",
      "description": "Development Server"
    },
    {
      "url": "https://la-aldeana-staging.herokuapp.com/api",
      "description": "Pre-Production Server"
    }
  ],
  "paths": {

    
    "/products": {
      "get": {
        "summary":"Lista todos los productos",
        "tags": ["Productos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de productos."
          }
        }
      }
    },
    
    "/typeProducts": {
      "get": {
        "summary":"Lista todos los tipos de productos",
        "tags": ["Tipos de productos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de tipos de productos."
          }
        }
      },

      "post": {
        "summary":"Registra un tipo de producto",
        "tags": ["Tipos de productos"],
        "parameters": [
          {
            "in": "body",
            "name": "name",
            "description": "Nombre del tipo de producto",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "description",
            "description": "Descripción del tipo de producto",
            "required": false,
            "type": "string"
          },

          {
            "in": "body",
            "name": "id_sector",
            "description": "ID del sector al que pertence el tipo de producto",
            "required": true,
            "type": "integer",
            "minimum": "1"
          }
        ],
        "responses": {
          "201": {
            "description": "Un tipo de producto fue registrado correctamente."
          }
        }
      }
    },
    
    "/supplies": {
      "get": {
        "summary":"Lista todos los insumos",
        "tags": ["Insumos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de insumos."
          }
        }
      },

      "post": {
        "summary":"Registra un insumo",
        "tags": ["Insumos"],
        "parameters": [
          {
            "in": "body",
            "name": "name",
            "description": "Nombre del insumo",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "description",
            "description": "Descripción del insumo",
            "required": false,
            "type": "string"
          },

          {
            "in": "body",
            "name": "id_supply_type",
            "description": "ID del tipo de insumo",
            "required": true,
            "type": "integer",
            "minimum": "1"
          },

          {
            "in": "body",
            "name": "price_wholesale",
            "description": "Precio mayorista del insumo",
            "required": false,
            "type": "integer",
            "minimum": "1"
          },

          {
            "in": "body",
            "name": "price_retail",
            "description": "Precio minorista del insumo",
            "required": false,
            "type": "integer",
            "minimum": "1"
          },

          {
            "in": "body",
            "name": "stock_lot",
            "description": "Lotes en stock del insumo",
            "required": false,
            "type": "integer",
            "minimum": "1"
          },

          {
            "in": "body",
            "name": "stock_unit",
            "description": "Unidades en stock del insumo",
            "required": false,
            "type": "integer",
            "minimum": "1"
          },

          {
            "in": "body",
            "name": "unit_x_lot",
            "description": "Cantidad de unidades en un lote del insumo",
            "required": false,
            "type": "integer",
            "minimum": "1"
          }
        ],
        "responses": {
          "201": {
            "description": "Un insumo fue registrado correctamente."
          }
        }
      }
    },
    
    "/typeSupplies": {
      "get": {
        "summary":"Lista todos los tipos de insumos",
        "tags": ["Insumos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de tipos de insumos."
          }
        }
      }
    },
    
    "/purchases": {
      "get": {
        "summary":"Lista todas las compras de insumos",
        "tags": ["Compras de insumos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de compras de insumos."
          }
        }
      },

      "post": {
        "summary":"Registra una compra de insumos",
        "tags": ["Compras de insumos"],
        "parameters": [
          {
            "in": "body",
            "name": "details",
            "description": "Detalle de compra",
            "required": true,
            "type": "object"
          },

          {
            "in": "body",
            "name": "supplier",
            "description": "Nombre del proveedor",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "date_purchase",
            "description": "Fecha de compra",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "total",
            "description": "Costo total de la compra",
            "required": true,
            "type": "integer",
            "minimum": "1"
          }
        ],
        "responses": {
          "201": {
            "description": "Una compra de insumo fue registrada exitosamente."
          }
        }
      }
    },
    
    "/lastPurchase": {
      "get": {
        "summary":"Trae la última compra de insumos",
        "tags": ["Compras de insumos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ID de la última compra de insumos."
          }
        }
      }
    },
    
    "/permission": {
      "get": {
        "summary":"Trae todos los permisos de usuario",
        "tags": ["Permisos de usuario"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de permisos de usuario."
          }
        }
      }
    },
    
    "/permission/filter/{rol}": {
      "get": {
        "summary":"Trae los permisos que posee un rol en particular",
        "tags": ["Permisos de usuario"],
        "parameters": [
          {
            "in": "path",
            "name": "rol",
            "description": "Rol de usuario",
            "required": true,
            "type": "integer",
            "minimum": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Un array (JSON) de permisos de usuario para un rol en particular."
          }
        }
      }
    },

    "/flavors": {
      "get": {
        "summary":"Lista todos los sabores de helado",
        "tags": ["Sabores de helado"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de sabores de helado."
          }
        }
      }
    },

    "/typeFlavors": {
      "get": {
        "summary":"Lista todos los tipos de sabores de helado",
        "tags": ["Sabores de helado"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de tipos de sabores de helado."
          }
        }
      }
    },

    "/chamberFlavorsDispatch": {  
      "post": {
        "summary":"Registra una salida de sabores de camara",
        "tags": ["Salida de sabores de camara"],
        "parameters": [
          {
            "in": "body",
            "name": "flavorsToDispatch",
            "description": "Un array (JSON) de sabores de helado a ser retirados de la camara con sus respectivos datos correspondientes a dicha transacción",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "201": {
            "description": "Una salida de sabores de camara fue registrada exitosamente."
          }
        }
      }
    },

    "/productions": {  
      "post": {
        "summary":"Registra producción de sabores de helado",
        "tags": ["Producción"],
        "parameters": [
          {
            "in": "body",
            "name": "dateProduction",
            "description": "Fecha de prodducción",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "flavors",
            "description": "Un array (JSON) de sabores de helado producidos con sus respectivos datos correspondientes a dicha transacción",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "201": {
            "description": "La producción de sabores de helado fue registrada exitosamente."
          }
        }
      }
    },
    
    "/franchises": {
      "get": {
        "summary":"Lista todas las franquicias",
        "tags": ["Franquicias"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de franquicias."
          }
        }
      },

      "post": {
        "summary":"Registra una franquicia",
        "tags": ["Franquicias"],
        "parameters": [
          {
            "in": "body",
            "name": "name",
            "description": "Nombre de la franquicia",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "start_date",
            "description": "Fecha de inicio de actividades",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "address",
            "description": "Dirección de la franquicia",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "address_number",
            "description": "Número de calle de la franquicia",
            "required": true,
            "type": "integer",
            "minimum": "1"
          },

          {
            "in": "body",
            "name": "city",
            "description": "Ciudad de la franquicia",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "province",
            "description": "Provincia de la franquicia",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "name_manager",
            "description": "Nombre del encargado de la franquicia",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "last_name_manager",
            "description": "Apellido del encargado de la franquicia",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "dni_manager",
            "description": "DNI del encargado de la franquicia",
            "required": true,
            "type": "integer",
            "minimum": "11111111"
          }
        ],
        "responses": {
          "201": {
            "description": "Una franquicia fue registrada exitosamente."
          }
        }
      }
    }











  }
}