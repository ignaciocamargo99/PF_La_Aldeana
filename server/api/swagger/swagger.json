{
  "openapi": "3.0.0",
  "info": {
    "version": 1.0,
    "title": "Swagger Heladeria",
    "description": "Documentación de las API´s del proyecto de Heladería y Cafetería La Aldeana",
    "contact": {
      "name": "Joaquín Bassano",
      "email": "joaquinbas98@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/api",
      "description": "Local Server"
    },
    {
      "url": "https://la-aldeana-dev.herokuapp.com/api",
      "description": "Development Server"
    },
    {
      "url": "https://la-aldeana-staging.herokuapp.com/api",
      "description": "Pre-Production Server"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "summary":"Lista todos los productos",
        "tags": ["Productos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de productos."
          }
        }
      },
      "post": {
        "summary":"Registra un producto",
        "tags": ["Productos"],
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "description": "JSON del producto",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "201": {
            "description": "Un producto fue registrado correctamente."
          }
        }
      }
    },
    "/products/{idProduct}": {
      "put": {
        "summary":"Edita un producto",
        "tags": ["Productos"],
        "parameters": [
          {
            "in": "path",
            "name": "idProduct",
            "description": "Id del producto",
            "required": true,
            "type": "integer",
            "minimum": "1"
          },
          {
            "in": "body",
            "name": "product",
            "description": "JSON del producto",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Un producto fue editado correctamente."
          }
        }
      },
      "delete": {
        "summary":"Elimina un producto",
        "tags": ["Productos"],
        "parameters": [
          {
            "in": "path",
            "name": "idProduct",
            "description": "Id del producto",
            "required": true,
            "type": "integer",
            "minimum": "1"
          }
        ],
        "responses": {
          "201": {
            "description": "Un producto fue eliminado correctamente."
          }
        }
      }
    },
    "/imageProduct/{idProduct}": {
      "get": {
        "summary":"Obtiene la imagen de un producto",
        "tags": ["Productos"],
        "parameters": [
          {
            "in": "path",
            "name": "idProduct",
            "description": "Id del producto",
            "required": true,
            "type": "integer",
            "minimum": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Un imagen del producto correspondiente."
          }
        }
      }
    },
    "/productxsupply": {
      "get": {
        "summary":"Lista todos los productos con los insumos asociados",
        "tags": ["Productos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de productos con los insumos asociados."
          }
        }
      }
    },
    "/productSupply/{idProduct}": {
      "get": {
        "summary":"Obtiene los insumos de un producto",
        "tags": ["Productos"],
        "parameters": [
          {
            "in": "path",
            "name": "idProduct",
            "description": "Id del producto",
            "required": true,
            "type": "integer",
            "minimum": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Un JSON con los insumos del producto correspondiente."
          }
        }
      }
    },
    "/productsStocks": {
      "get": {
        "summary":"Lista todos el stock de todos los productos",
        "tags": ["Productos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) con los productos y su stock"
          }
        }
      }
    },
    "/typeProducts": {
      "get": {
        "summary":"Lista todos los tipos de productos",
        "tags": ["Tipos de productos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de tipos de productos."
          }
        }
      },
      "post": {
        "summary":"Registra un tipo de producto",
        "tags": ["Tipos de productos"],
        "parameters": [
          {
            "in": "body",
            "name": "name",
            "description": "Nombre del tipo de producto",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "description",
            "description": "Descripción del tipo de producto",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "id_sector",
            "description": "ID del sector al que pertence el tipo de producto",
            "required": true,
            "type": "integer",
            "minimum": "1"
          }
        ],
        "responses": {
          "201": {
            "description": "Un tipo de producto fue registrado correctamente."
          }
        }
      }
    },
    "/supplies": {
      "get": {
        "summary":"Lista todos los insumos",
        "tags": ["Insumos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de insumos."
          }
        }
      },
      "post": {
        "summary":"Registra un insumo",
        "tags": ["Insumos"],
        "parameters": [
          {
            "in": "body",
            "name": "name",
            "description": "Nombre del insumo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "description",
            "description": "Descripción del insumo",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "id_supply_type",
            "description": "ID del tipo de insumo",
            "required": true,
            "type": "integer",
            "minimum": "1"
          },
          {
            "in": "body",
            "name": "price_wholesale",
            "description": "Precio mayorista del insumo",
            "required": false,
            "type": "integer",
            "minimum": "1"
          },
          {
            "in": "body",
            "name": "price_retail",
            "description": "Precio minorista del insumo",
            "required": false,
            "type": "integer",
            "minimum": "1"
          },
          {
            "in": "body",
            "name": "stock_lot",
            "description": "Lotes en stock del insumo",
            "required": false,
            "type": "integer",
            "minimum": "1"
          },
          {
            "in": "body",
            "name": "stock_unit",
            "description": "Unidades en stock del insumo",
            "required": false,
            "type": "integer",
            "minimum": "1"
          },
          {
            "in": "body",
            "name": "unit_x_lot",
            "description": "Cantidad de unidades en un lote del insumo",
            "required": false,
            "type": "integer",
            "minimum": "1"
          }
        ],
        "responses": {
          "201": {
            "description": "Un insumo fue registrado correctamente."
          }
        }
      }
    },
    "/typeSupplies": {
      "get": {
        "summary":"Lista todos los tipos de insumos",
        "tags": ["Insumos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de tipos de insumos."
          }
        }
      }
    },
    "/purchases": {
      "get": {
        "summary":"Lista todas las compras de insumos",
        "tags": ["Compras de insumos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de compras de insumos."
          }
        }
      },
      "post": {
        "summary":"Registra una compra de insumos",
        "tags": ["Compras de insumos"],
        "parameters": [
          {
            "in": "body",
            "name": "details",
            "description": "Detalle de compra",
            "required": true,
            "type": "object"
          },
          {
            "in": "body",
            "name": "supplier",
            "description": "Nombre del proveedor",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "date_purchase",
            "description": "Fecha de compra",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "total",
            "description": "Costo total de la compra",
            "required": true,
            "type": "integer",
            "minimum": "1"
          }
        ],
        "responses": {
          "201": {
            "description": "Una compra de insumo fue registrada exitosamente."
          }
        }
      }
    },    
    "/lastPurchase": {
      "get": {
        "summary":"Trae la última compra de insumos",
        "tags": ["Compras de insumos"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ID de la última compra de insumos."
          } 
        }      
      }  
    },   
    "/users": {
      "get": {
        "summary":"Trae todos los usuarios",
        "tags": ["Usuarios"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de usuarios."
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "summary":"Trae todos los permisos de usuario",
        "tags": ["Permisos de usuario"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de permisos de usuario."
          }
        }
      }
    },  
    "/permissions/filter/{nick_user}": {
      "get": {
        "summary":"Trae los permisos que posee un usuario en particular",
        "tags": ["Permisos de usuario"],
        "parameters": [
          {
            "in": "path",
            "name": "rol",
            "description": "Rol de usuario",
            "required": true,
            "type": "integer",
            "minimum": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Un array (JSON) de permisos de usuario para un rol en particular."
          }
        }
      }
    },
    "/flavors": {
      "get": {
        "summary":"Lista todos los sabores de helado",
        "tags": ["Sabores de helado"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de sabores de helado."
          }
        }
      }
    },
    "/typeFlavors": {
      "get": {
        "summary":"Lista todos los tipos de sabores de helado",
        "tags": ["Sabores de helado"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de tipos de sabores de helado."
          }
        }
      }
    },
    "/chamberFlavorsDispatch": {  
      "post": {
        "summary":"Registra una salida de sabores de camara",
        "tags": ["Salida de sabores de camara"],
        "parameters": [
          {
            "in": "body",
            "name": "flavorsToDispatch",
            "description": "Un array (JSON) de sabores de helado a ser retirados de la camara con sus respectivos datos correspondientes a dicha transacción",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "201": {
            "description": "Una salida de sabores de camara fue registrada exitosamente."
          }
        }
      }
    },
    "/productions": {  
      "post": {
        "summary":"Registra producción de sabores de helado",
        "tags": ["Producción"],
        "parameters": [
          {
            "in": "body",
            "name": "dateProduction",
            "description": "Fecha de prodducción",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "flavors",
            "description": "Un array (JSON) de sabores de helado producidos con sus respectivos datos correspondientes a dicha transacción",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "201": {
            "description": "La producción de sabores de helado fue registrada exitosamente."
          }
        }
      }
    },
    "/franchises": {
      "get": {
        "summary":"Lista todas las franquicias",
        "tags": ["Franquicias"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) de franquicias."
          }
        }
      },
      "post": {
        "summary":"Registra una franquicia",
        "tags": ["Franquicias"],
        "parameters": [
          {
            "in": "body",
            "name": "name",
            "description": "Nombre de la franquicia",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "start_date",
            "description": "Fecha de inicio de actividades",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "address",
            "description": "Dirección de la franquicia",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "address_number",
            "description": "Número de calle de la franquicia",
            "required": true,
            "type": "integer",
            "minimum": "1"
          },
          {
            "in": "body",
            "name": "city",
            "description": "Ciudad de la franquicia",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "province",
            "description": "Provincia de la franquicia",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "name_manager",
            "description": "Nombre del encargado de la franquicia",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "last_name_manager",
            "description": "Apellido del encargado de la franquicia",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dni_manager",
            "description": "DNI del encargado de la franquicia",
            "required": true,
            "type": "integer",
            "minimum": "11111111"
          }
        ],
        "responses": {
          "201": {
            "description": "Una franquicia fue registrada exitosamente."
          }
        }
      }
    },
    "/sales": {
      "post": {
        "summary":"Registra una venta en el local",
        "tags": ["Ventas"],
        "parameters": [
          {
            "in": "body",
            "name": "sale",
            "description": "Un array (JSON) de con toda la información que se necesita para realizar la venta.",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "201": {
            "description": "Una venta en el local fue registrada exitosamente."
          }
        }
      }
    },
    "/salesDelivry": {
      "post": {
        "summary":"Registra una venta por delivery",
        "tags": ["Ventas"],
        "parameters": [
          {
            "in": "body",
            "name": "saleDelivery",
            "description": "Un array (JSON) de con toda la información que se necesita para realizar la venta por delivery.",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "201": {
            "description": "Una venta por delivery fue registrada exitosamente."
          }
        }
      }
    },
    "/payTypes": {
      "get": {
        "summary":"Lista todos los tipos de pagos",
        "tags": ["Ventas"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) con los tipos de pagos."
          }
        }
      }
    },
    "/clients": {
      "get": {
        "summary":"Lista todos los clientes de delivery",
        "tags": ["Clientes"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) con los clientes."
          }
        }
      },
      "post": {
        "summary":"Registra una cliente de delivery nuevo",
        "tags": ["Clientes"],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "Un array (JSON) con los datos del cliente por delivery",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "201": {
            "description": "Un cliente de delivery fue registrado exitosamente."
          }
        }
      }
    },
    "/clients/{cellphone}": {
      "get": {
        "summary":"Obtiene el cliente por delivery pasado por parámetro",
        "tags": ["Clientes"],
        "parameters": [
          {
            "in": "path",
            "name": "cellphone",
            "description": "El número de telefono del cliente por delivery",
            "required": false,
            "type": "int"
          }
        ],
        "responses": {
          "200": {
            "description": "Un array (JSON) con los datos del cliente en particular."
          }
        }
      },
      "put": {
        "summary":"Modifica una cliente de delivery nuevo",
        "tags": ["Clientes"],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "Un array (JSON) con los datos del cliente por delivery",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Un cliente de delivery fue modificado exitosamente."
          }
        }
      }
    },
    "/salesReport?from={dateFrom}&to={dateTo}": {
      "get": {
        "summary":"Lista la cantidad de productos vendidos en ventas en el local y por delivery en un período de tiempo determinado.",
        "tags": ["Reportes Ventas"],
        "parameters": [
          {
            "in": "path",
            "name": "dateFrom",
            "description": "Fecha de inicio del reporte",
            "required": true,
            "type": "date"
          },
          {
            "in": "path",
            "name": "dateTo",
            "description": "Fecha de fin del reporte",
            "required": true,
            "type": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "Un array (JSON) con los tipos de pagos."
          }
        }
      }
    },
    "/employees": {
      "get": {
        "summary":"Lista todos los empleados",
        "tags": ["Empleados"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) con los empleados."
          }
        }
      },
      "post": {
        "summary":"Registra un empleado nuevo",
        "tags": ["Empleados"],
        "parameters": [
          {
            "in": "body",
            "name": "employee",
            "description": "JSON del empleado",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "201": {
            "description": "Un empleado fue registrado correctamente."
          }
        }
      }
    },
    "/employees/{dni}": {
      "put": {
        "summary":"Editar un empleado",
        "tags": ["Empleados"],
        "parameters": [
          {
            "in": "path",
            "name": "dni",
            "description": "DNI del empleado",
            "required": true,
            "type": "int"
          },
          {
            "in": "body",
            "name": "employee",
            "description": "JSON del empleado",
            "required": true,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "Un empleado fue editado correctamente."
          }
        }
      },
      "delete": {
        "summary":"Eliminar un empleado",
        "tags": ["Empleados"],
        "parameters": [
          {
            "in": "path",
            "name": "dni",
            "description": "DNI del empleado",
            "required": true,
            "type": "int"
          }
        ],
        "responses": {
          "200": {
            "description": "Un empleado fue eliminado correctamente."
          }
        }
      }
    },
    "/charges": {
      "get": {
        "summary":"Lista los posibles cargos para los empleados",
        "tags": ["Empleados"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Un array (JSON) con los cargos de los empleados."
          }
        }
      }
    }
  }
}